buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.linux.fortunes.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.targetCompatibility
    }

    signingConfigs {
        release {
            def Properties keyProps = new Properties()
            keyProps.load(new FileInputStream(file('../signing.properties')))
            storeFile file(keyProps["storeFile"])
            keyAlias keyProps["keyAlias"]
            storePassword keyProps["storePassword"]
            keyPassword keyProps["keyPassword"]
        }
    }

    productFlavors {
        brazilian {
            applicationId android.defaultConfig.applicationId + ".brazilian"
        }
        bulgarian {
            applicationId android.defaultConfig.applicationId + ".bulgarian"
        }
        czechslovak {
            applicationId android.defaultConfig.applicationId + ".czechslovak"
        }
        english {
            applicationId android.defaultConfig.applicationId + ".english"
        }
        esperanto {
            applicationId android.defaultConfig.applicationId + ".esperanto"
        }
        french {
            applicationId android.defaultConfig.applicationId + ".french"
        }
        german {
            applicationId android.defaultConfig.applicationId + ".german"
        }
        irish {
            applicationId android.defaultConfig.applicationId + ".irish"
        }
        italian {
            applicationId android.defaultConfig.applicationId + ".italian"
        }
        polish {
            applicationId android.defaultConfig.applicationId + ".polish"
        }
        russian {
            applicationId android.defaultConfig.applicationId + ".russian"
        }
        spanish {
            applicationId android.defaultConfig.applicationId + ".spanish"
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean", "HAS_SOCIAL_SHARING", "true"
        }

        bbRelease.initWith(release)
        bbRelease {
            applicationIdSuffix ".bb"
            versionNameSuffix ".bb"
            buildConfigField "boolean", "HAS_SOCIAL_SHARING", "false"
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "HAS_SOCIAL_SHARING", "true"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.facebook.android:facebook-android-sdk:3.21.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.0@aar') {
        transitive = true;
    }
}
